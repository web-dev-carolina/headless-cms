[{"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/index.js":"1","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/serviceWorker.js":"2","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/App.js":"3","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/NavbarContainer.jsx":"4","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/context/UserContext.js":"5","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/Dashboard.jsx":"6","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/Signup.jsx":"7","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/Login.jsx":"8","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/testimonials/TestimonialsPage.jsx":"9","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/people/PeoplePage.jsx":"10","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/ProjectSelect.jsx":"11","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/testimonials/Testimonials.jsx":"12","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/people/People.jsx":"13","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/text/TextContentPage.jsx":"14","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/text/TextContent.jsx":"15","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/announcements/AnnouncementsPage.jsx":"16","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/announcements/Announcements.jsx":"17","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/articles/ArticlesPage.jsx":"18","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/articles/Articles.jsx":"19"},{"size":404,"mtime":1608939208621,"results":"20","hashOfConfig":"21"},{"size":5086,"mtime":1608725249596,"results":"22","hashOfConfig":"21"},{"size":1671,"mtime":1615053116009,"results":"23","hashOfConfig":"21"},{"size":4423,"mtime":1615065987386,"results":"24","hashOfConfig":"21"},{"size":75,"mtime":1608826639850,"results":"25","hashOfConfig":"21"},{"size":1727,"mtime":1615056899036,"results":"26","hashOfConfig":"21"},{"size":2723,"mtime":1609600416413,"results":"27","hashOfConfig":"21"},{"size":2148,"mtime":1609172182962,"results":"28","hashOfConfig":"21"},{"size":3882,"mtime":1615056599661,"results":"29","hashOfConfig":"21"},{"size":5241,"mtime":1615056548833,"results":"30","hashOfConfig":"21"},{"size":2107,"mtime":1615056881124,"results":"31","hashOfConfig":"21"},{"size":5325,"mtime":1609175408364,"results":"32","hashOfConfig":"21"},{"size":6728,"mtime":1609109052744,"results":"33","hashOfConfig":"21"},{"size":5422,"mtime":1615056808256,"results":"34","hashOfConfig":"21"},{"size":5317,"mtime":1609176494356,"results":"35","hashOfConfig":"21"},{"size":5036,"mtime":1615066278891,"results":"36","hashOfConfig":"21"},{"size":7917,"mtime":1615066616702,"results":"37","hashOfConfig":"21"},{"size":4156,"mtime":1615066595826,"results":"38","hashOfConfig":"21"},{"size":8453,"mtime":1615066229008,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1csybor",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/index.js",[],["83","84"],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/serviceWorker.js",[],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/App.js",["85"],"import NavbarContainer from './components/NavbarContainer.jsx';\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport { useHistory } from \"react-router-dom\";\nimport UserContext from \"./context/UserContext.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Axios from 'axios';\nrequire('dotenv').config();\n\nfunction App() {\n  const [userData, setUserData] = useState({\n    token: undefined,\n    userInfo: {\n      user: undefined,\n      proj: [undefined],\n      activeProject: \"\"\n    }\n  });\n  const history = useHistory();\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"auth-token\");\n      if (token == null) {\n        token = \"\";\n        localStorage.setItem(\"auth-token\", token);\n      }\n      const tokenRes = await Axios.post(process.env.REACT_APP_API_URL + \"/users/tokenIsValid\", null, {\n        headers: { \"auth-token\": token }\n      });\n      if (tokenRes.data.valid) {\n        await Axios.get(process.env.REACT_APP_API_URL + \"/users/\" + tokenRes.data.user._id).then((res) => {\n          setUserData({\n            token: tokenRes.data.token,\n            userInfo: {\n              user: res.data.user,\n              proj: res.data.proj\n            },\n          })\n        }, (err) => {\n          console.log(err);\n        });\n        history.push('/projectselect');\n        console.log('already logged in');\n      } else {\n        history.push('/signin');\n      }\n    }\n    checkLoggedIn();\n  }, []);\n\n  return (\n    <UserContext.Provider value={{ userData, setUserData }} >\n      <NavbarContainer>\n      </NavbarContainer>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/NavbarContainer.jsx",[],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/context/UserContext.js",[],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/Dashboard.jsx",["86"],"import React, { useState, useEffect } from \"react\";\nimport { Container, Button, Row, Breadcrumb } from \"react-bootstrap\";\nimport \"../styles/Login.css\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport Axios from \"axios\";\n\nconst Dashboard = () => {\n    const [collectionsList, setCollectionsList] = useState([]);\n    const history = useHistory();\n\n    useEffect(() => {\n        async function fetchData() {\n            const result = await Axios.get('http://localhost:9000/info');\n            setCollectionsList(result.data[0].collections);\n        }\n        fetchData();\n    }, []);\n\n    async function clickHandler(collection) {\n        history.push('/' + collection.toString().toLowerCase());\n    }\n\n    return (\n        <>\n            <Breadcrumb>\n                <Breadcrumb.Item linkAs={Link} linkProps={{ to: \"/projectselect\" }}>Projects</Breadcrumb.Item>\n                <Breadcrumb.Item active>Collections</Breadcrumb.Item>\n            </Breadcrumb>\n            <Container>\n                <h1>Dashboard</h1>\n                <h3 className=\"text-center\">Select the collection you want to work on.</h3>\n            </Container>\n            <Container className=\"collections-list col-md-6 pt-3\" id=\"collection-select\">\n                {collectionsList.filter((c) => c !== \"\")\n                    .map(c =>\n                        <>\n                            <Button key={c} id={c} variant=\"secondary\" size=\"lg\" block onClick={(e) => clickHandler(e.target.firstChild.data)}>\n                                {c}\n                            </Button>\n                            <br></br>\n                        </>\n                    )}\n            </Container>\n        </>\n    )\n}\n\nexport default Dashboard;","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/Signup.jsx",[],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/Login.jsx",[],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/testimonials/TestimonialsPage.jsx",[],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/people/PeoplePage.jsx",["87"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { Form, Container, Button, Modal, Row, Col, Breadcrumb } from \"react-bootstrap\";\nimport Axios from \"axios\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport People from './People.jsx';\nconst PeoplePage = () => {\n    const history = useHistory();\n    const [people, setPeople] = useState([]);\n    const [showCreate, setShowCreate] = useState(false);\n    const [newFname, setNewFname] = useState(\"\");\n    const [newLname, setNewLname] = useState(\"\");\n    const [newPos, setNewPos] = useState(\"\");\n    const [newBio, setNewBio] = useState(\"\");\n\n    useEffect(() => {\n        async function fetchData() {\n            const result = await Axios.get(process.env.REACT_APP_API_URL + \"/people\");\n            const data = result.data;\n            setPeople(data);\n            console.log(data);\n        }\n        fetchData();\n    }, []);\n\n    const showCreateModal = () => setShowCreate(true);\n    const closeCreateModal = () => setShowCreate(false);\n    const saveNewPerson = async () => {\n        const url = process.env.REACT_APP_API_URL + \"/people/\";\n        await Axios.post(url, {\n            fname: newFname,\n            lname: newLname,\n            pos: newPos,\n            bio: newBio\n        })\n        setShowCreate(false);\n        history.replace('/dashboard');\n        history.replace('/people');\n    }\n\n    return (\n        <>\n            <Breadcrumb>\n                <Breadcrumb.Item linkAs={Link} linkProps={{to:\"/projectselect\"}}>Projects</Breadcrumb.Item>\n                <Breadcrumb.Item linkAs={Link} linkProps={{to:\"/dashboard\"}}>Collections</Breadcrumb.Item>\n                <Breadcrumb.Item active>People</Breadcrumb.Item>\n            </Breadcrumb> \n            <Container className=\"home pt-3\">\n                <h3 className=\"text-center\">People collection:</h3>\n                <Button variant=\"secondary\" onClick={showCreateModal}>Add new organization member</Button>\n                <div className=\"row\" key=\"people\">\n                    {people.map(person => <People person={person} />)}\n                </div>\n            </Container>\n            <Modal show={showCreate} onHide={closeCreateModal}>\n                <Modal.Header className=\"border-0\">\n                    <Modal.Title>Create a new organization member</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form className=\"\">\n                        <Row>\n                            <Col>\n                                <Form.Group size=\"lg\" controlId=\"fname\">\n                                    <Form.Label>First Name</Form.Label>\n                                    <Form.Control\n                                        autoFocus\n                                        type=\"text\"\n                                        placeholder=\"John\"\n                                        value={newFname}\n                                        onChange={(e) => setNewFname(e.target.value)}\n                                    />\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Form.Group size=\"lg\" controlId=\"lname\">\n                                    <Form.Label>Last Name</Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        placeholder=\"Doe\"\n                                        value={newLname}\n                                        onChange={(e) => setNewLname(e.target.value)}\n                                    />\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Form.Group size=\"lg\" controlId=\"pos\">\n                            <Form.Label>Position</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"President\"\n                                value={newPos}\n                                onChange={(e) => setNewPos(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"bio\">\n                            <Form.Label>Bio</Form.Label>\n                            <Form.Control\n                                as=\"textarea\"\n                                rows={3}\n                                placeholder=\"Received his MBA from UNC Kenan-Flagler and is an avid bird-watcher.\"\n                                value={newBio}\n                                onChange={(e) => setNewBio(e.target.value)}\n                            />\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer className=\"border-0\">\n                    <Button variant=\"secondary\" onClick={closeCreateModal}>\n                        Cancel\n                    </Button>\n                    <Button variant=\"primary\" onClick={saveNewPerson}>\n                        Save\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default PeoplePage;","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/ProjectSelect.jsx",["88"],"import React, { useEffect, useState, useContext } from \"react\";\nimport { Container, Button, Breadcrumb } from \"react-bootstrap\";\nimport \"../styles/ProjectSelect.css\";\nimport Axios from \"axios\";\nimport UserContext from '../context/UserContext.js';\nimport { useHistory } from \"react-router-dom\";\n\nexport default function ProjectSelect() {\n    const history = useHistory();\n    const { userData, setUserData } = useContext(UserContext);\n    const [projectsList, setProjectsList] = useState([]);\n\n    useEffect(() => {\n        setProjectsList(userData.userInfo.proj);\n    }, []);\n\n    async function clickHandler(project) {\n        const projReqBody = { \"project\": project };\n        await Axios.post(process.env.REACT_APP_API_URL + \"/info/projectsConnect\", projReqBody)\n            .then((response) => {\n                setUserData({\n                    token: userData.token,\n                    userInfo: {\n                        user: userData.userInfo.user,\n                        proj: userData.userInfo.proj,\n                        activeProject: project\n                    }\n                })\n                history.push('/dashboard');\n            }, (error) => {\n                alert(error);\n            });\n\n    }\n\n    return (\n        <>\n            <Breadcrumb>\n                <Breadcrumb.Item active>Projects</Breadcrumb.Item>\n            </Breadcrumb>\n            <h3 className=\"text-center pt-3\">Select the project you want to work on.</h3>\n            <Container className=\"project-select col-md-6\" id=\"project-select\">\n                <div className=\"projects-list pt-3\">\n                    {projectsList.filter((p) => p !== \"\")\n                        .map(p =>\n                            <>\n                                <Button id={p} variant=\"secondary\" size=\"lg\" block onClick={(e) => clickHandler(e.target.firstChild.data)}>\n                                    {p}\n                                </Button>\n                                <br></br>\n                            </>\n                        )}\n                </div>\n            </Container>\n        </>\n    );\n}","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/testimonials/Testimonials.jsx",[],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/people/People.jsx",[],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/text/TextContentPage.jsx",[],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/text/TextContent.jsx",[],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/announcements/AnnouncementsPage.jsx",[],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/announcements/Announcements.jsx",[],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/articles/ArticlesPage.jsx",["89","90","91","92"],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/articles/Articles.jsx",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":50,"column":6,"nodeType":"99","endLine":50,"endColumn":8,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":2,"column":29,"nodeType":"103","messageId":"104","endLine":2,"endColumn":32},{"ruleId":"101","severity":1,"message":"105","line":1,"column":27,"nodeType":"103","messageId":"104","endLine":1,"endColumn":37},{"ruleId":"97","severity":1,"message":"106","line":15,"column":8,"nodeType":"99","endLine":15,"endColumn":10,"suggestions":"107"},{"ruleId":"101","severity":1,"message":"108","line":7,"column":10,"nodeType":"103","messageId":"104","endLine":7,"endColumn":16},{"ruleId":"101","severity":1,"message":"109","line":8,"column":10,"nodeType":"103","messageId":"104","endLine":8,"endColumn":21},{"ruleId":"101","severity":1,"message":"110","line":16,"column":22,"nodeType":"103","messageId":"104","endLine":16,"endColumn":33},{"ruleId":"101","severity":1,"message":"111","line":19,"column":21,"nodeType":"103","messageId":"104","endLine":19,"endColumn":31},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["114"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","React Hook useEffect has a missing dependency: 'userData.userInfo.proj'. Either include it or remove the dependency array.",["115"],"'Editor' is defined but never used.","'EditorState' is defined but never used.","'setNewTitle' is assigned a value but never used.","'setNewDate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [history]",{"range":"120","text":"121"},"Update the dependencies array to be: [userData.userInfo.proj]",{"range":"122","text":"123"},[1487,1489],"[history]",[571,573],"[userData.userInfo.proj]"]
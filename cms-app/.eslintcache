[{"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/index.js":"1","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/serviceWorker.js":"2","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/App.js":"3","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/NavbarContainer.jsx":"4","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/context/UserContext.js":"5","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/Dashboard.jsx":"6","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/Signup.jsx":"7","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/Login.jsx":"8","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/testimonials/TestimonialsPage.jsx":"9","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/people/PeoplePage.jsx":"10","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/ProjectSelect.jsx":"11","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/testimonials/Testimonials.jsx":"12","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/people/People.jsx":"13","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/text/TextContentPage.jsx":"14","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/text/TextContent.jsx":"15"},{"size":404,"mtime":1608939208621,"results":"16","hashOfConfig":"17"},{"size":5086,"mtime":1608725249596,"results":"18","hashOfConfig":"17"},{"size":1671,"mtime":1615053116009,"results":"19","hashOfConfig":"17"},{"size":3994,"mtime":1615055434378,"results":"20","hashOfConfig":"17"},{"size":75,"mtime":1608826639850,"results":"21","hashOfConfig":"17"},{"size":1719,"mtime":1615055979498,"results":"22","hashOfConfig":"17"},{"size":2723,"mtime":1609600416413,"results":"23","hashOfConfig":"17"},{"size":2148,"mtime":1609172182962,"results":"24","hashOfConfig":"17"},{"size":3831,"mtime":1615053216652,"results":"25","hashOfConfig":"17"},{"size":5241,"mtime":1615055967418,"results":"26","hashOfConfig":"17"},{"size":1991,"mtime":1615052100641,"results":"27","hashOfConfig":"17"},{"size":5325,"mtime":1609175408364,"results":"28","hashOfConfig":"17"},{"size":6728,"mtime":1609109052744,"results":"29","hashOfConfig":"17"},{"size":5290,"mtime":1615053236060,"results":"30","hashOfConfig":"17"},{"size":5317,"mtime":1609176494356,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1csybor",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/index.js",[],["67","68"],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/serviceWorker.js",[],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/App.js",["69"],"import NavbarContainer from './components/NavbarContainer.jsx';\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport { useHistory } from \"react-router-dom\";\nimport UserContext from \"./context/UserContext.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Axios from 'axios';\nrequire('dotenv').config();\n\nfunction App() {\n  const [userData, setUserData] = useState({\n    token: undefined,\n    userInfo: {\n      user: undefined,\n      proj: [undefined],\n      activeProject: \"\"\n    }\n  });\n  const history = useHistory();\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"auth-token\");\n      if (token == null) {\n        token = \"\";\n        localStorage.setItem(\"auth-token\", token);\n      }\n      const tokenRes = await Axios.post(process.env.REACT_APP_API_URL + \"/users/tokenIsValid\", null, {\n        headers: { \"auth-token\": token }\n      });\n      if (tokenRes.data.valid) {\n        await Axios.get(process.env.REACT_APP_API_URL + \"/users/\" + tokenRes.data.user._id).then((res) => {\n          setUserData({\n            token: tokenRes.data.token,\n            userInfo: {\n              user: res.data.user,\n              proj: res.data.proj\n            },\n          })\n        }, (err) => {\n          console.log(err);\n        });\n        history.push('/projectselect');\n        console.log('already logged in');\n      } else {\n        history.push('/signin');\n      }\n    }\n    checkLoggedIn();\n  }, []);\n\n  return (\n    <UserContext.Provider value={{ userData, setUserData }} >\n      <NavbarContainer>\n      </NavbarContainer>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/NavbarContainer.jsx",[],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/context/UserContext.js",[],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/Dashboard.jsx",["70"],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/Signup.jsx",[],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/Login.jsx",[],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/testimonials/TestimonialsPage.jsx",["71"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Container, Button, Modal, Breadcrumb } from \"react-bootstrap\";\nimport Axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport Testimonials from './Testimonials.jsx';\nimport '../../styles/Testimonials.css';\n\nconst TestimonialsPage = () => {\n    const history = useHistory();\n    const [testimonials, setTestimonials] = useState([]);\n    const [showCreate, setShowCreate] = useState(false);\n    const [newText, setNewText] = useState(\"\");\n    const [newAuthor, setNewAuthor] = useState(\"\");\n\n    useEffect(() => {\n        async function fetchData() {\n            const result = await Axios.get(process.env.REACT_APP_API_URL + \"/testimonials\");\n            const data = result.data;\n            setTestimonials(data);\n        }\n        fetchData();\n    }, []);\n\n    const showCreateModal = () => setShowCreate(true);\n    const closeCreateModal = () => setShowCreate(false);\n    const saveNewTestimonial = async () => {\n        const url = process.env.REACT_APP_API_URL + \"/testimonials\";\n        await Axios.post(url, {\n            text: newText,\n            author: newAuthor\n        })\n        setShowCreate(false);\n        history.replace('/dashboard');\n        history.replace('/testimonials');\n    }\n\n    return (\n        <>\n            {/* <Breadcrumb>\n                <Breadcrumb.Item href=\"/projectselect\">Projects</Breadcrumb.Item>\n                <Breadcrumb.Item href=\"/dashboard\">Collections</Breadcrumb.Item>\n                <Breadcrumb.item active>Testimonials</Breadcrumb.item>\n            </Breadcrumb> */}\n            <Container className=\"home pt-3\">\n                <h3 className=\"text-center\">Testimonials collection:</h3>\n                <Button variant=\"secondary\" onClick={showCreateModal}>Add new testimonial</Button>\n                <div className=\"row\" key=\"testimonials\">\n                    { testimonials.map(testimony => <Testimonials testimony={testimony} />) }\n                </div>\n            </Container>\n            <Modal show={showCreate} onHide={closeCreateModal}>\n                <Modal.Header className=\"border-0\">\n                    <Modal.Title>Create new testimonial</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form className=\"\">\n                        <Form.Group size=\"lg\" controlId=\"text\">\n                            <Form.Label>Text</Form.Label>\n                            <Form.Control\n                                autoFocus\n                                as=\"textarea\"\n                                rows={3}\n                                placeholder=\"Excellent service. Will use again.\"\n                                value={newText}\n                                onChange={(e) => setNewText(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"author\">\n                            <Form.Label>Author</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"John Doe\"\n                                value={newAuthor}\n                                onChange={(e) => setNewAuthor(e.target.value)}\n                            />\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer className=\"border-0\">\n                    <Button variant=\"secondary\" onClick={closeCreateModal}>\n                        Cancel\n                    </Button>\n                    <Button variant=\"primary\" onClick={saveNewTestimonial}>\n                        Save\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default TestimonialsPage;","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/people/PeoplePage.jsx",["72","73"],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/ProjectSelect.jsx",["74"],"import React, { useEffect, useState, useContext } from \"react\";\nimport { Container, Button, Breadcrumb } from \"react-bootstrap\";\nimport \"../styles/ProjectSelect.css\";\nimport Axios from \"axios\";\nimport UserContext from '../context/UserContext.js';\nimport { useHistory } from \"react-router-dom\";\n\nexport default function ProjectSelect() {\n    const history = useHistory();\n    const { userData, setUserData } = useContext(UserContext);\n    const [projectsList, setProjectsList] = useState([]);\n\n    useEffect(() => {\n        setProjectsList(userData.userInfo.proj);\n    });\n\n    async function clickHandler(project) {\n        const projReqBody = { \"project\": project };\n        await Axios.post(process.env.REACT_APP_API_URL + \"/info/projectsConnect\", projReqBody)\n        .then((response) => {\n            setUserData({\n                token: userData.token,\n                userInfo: {\n                    user: userData.userInfo.user,\n                    proj: userData.userInfo.proj,\n                    activeProject: project\n                }\n            })\n            history.push('/dashboard');\n        }, (error) => {\n            alert(error);\n        });\n        \n    }\n\n    return (\n        <>\n        <Breadcrumb>\n            <Breadcrumb.Item active>Projects</Breadcrumb.Item>\n        </Breadcrumb>\n        <h3 className=\"text-center pt-3\">Select the project you want to work on.</h3>\n        <Container className=\"project-select col-md-6\" id=\"project-select\">\n            <div className=\"projects-list pt-3\">\n                {projectsList.filter((p) => p !== \"\")\n                    .map(p =>\n                        <>\n                            <Button id={p} variant=\"secondary\" size=\"lg\" block onClick={(e) => clickHandler(e.target.firstChild.data)}>\n                                {p}\n                            </Button>\n                            <br></br>\n                        </>\n                    )}\n            </div>\n        </Container>\n        </>\n    );\n}","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/testimonials/Testimonials.jsx",[],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/people/People.jsx",[],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/text/TextContentPage.jsx",["75"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Container, Button, Modal, Breadcrumb } from \"react-bootstrap\";\nimport Axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport TextContent from './TextContent.jsx';\nimport '../../styles/TextContent.css';\n\nconst TextContentPage = () => {\n    const history = useHistory();\n    const [textContent, setTextContent] = useState([]);\n    const [textAreas, setTextAreas] = useState([]);\n    const [showCreate, setShowCreate] = useState(false);\n    const [newContent, setNewContent] = useState(\"\");\n    const [newSection, setNewSection] = useState(\"\");\n    const [newDescription, setNewDescription] = useState(\"\");\n\n\n    useEffect(() => {\n        async function fetchData() {\n            const contentRes = await Axios.get(process.env.REACT_APP_API_URL + \"/textContent\");\n            setTextContent(contentRes.data);\n            const areasRes = await Axios.get(process.env.REACT_APP_API_URL + \"/textContent/sections\");\n            setTextAreas(areasRes.data[0].sections);\n        }\n        fetchData();\n    }, []);\n\n    const showCreateModal = () => setShowCreate(true);\n    const closeCreateModal = () => setShowCreate(false);\n    const saveNewBlock = async () => {\n        const url = process.env.REACT_APP_API_URL + \"/textContent\";\n        await Axios.post(url, {\n            content: newContent,\n            section: newSection,\n            desc: newDescription\n        })\n        setShowCreate(false);\n        history.replace('/dashboard');\n        history.replace('/text');\n    }\n\n    return (\n        <>\n            {/* <Breadcrumb>\n                <Breadcrumb.Item href=\"/projectselect\">Projects</Breadcrumb.Item>\n                <Breadcrumb.Item href=\"/dashboard\">Collections</Breadcrumb.Item>\n                <Breadcrumb.item active>Text</Breadcrumb.item>\n            </Breadcrumb> */}\n            <Container className=\"home pt-3\">\n                <h3 className=\"text-center\">Text content collection:</h3>\n                <Button variant=\"secondary\" onClick={showCreateModal} className=\"mb-3\">Add new text block</Button>\n                {textAreas.map(area => <>\n                    <div className=\"row\">\n                        <h4 className=\"m-0\">{area}</h4>\n                    </div>\n                    <div className=\"row mb-3\">\n                        {textContent.filter(t => t.section === area).map(t => <TextContent text={t} />)}\n                    </div>\n                </>)}\n            </Container>\n            <Modal show={showCreate} onHide={closeCreateModal}>\n                <Modal.Header className=\"border-0\">\n                    <Modal.Title>Create new text block</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form className=\"\">\n                        <Form.Group size=\"lg\" controlId=\"content\">\n                            <Form.Label>Content</Form.Label>\n                            <Form.Control\n                                autoFocus\n                                as=\"textarea\"\n                                rows={3}\n                                placeholder=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris nibh tortor, interdum quis feugiat nec, volutpat non tellus. Aenean rutrum vitae ex in tristique.\"\n                                value={newContent}\n                                onChange={(e) => setNewContent(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"description\">\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control\n                                as=\"textarea\"\n                                rows={2}\n                                placeholder=\"Description of where the text is within its section on the site so that it is easy to identify.\"\n                                value={newDescription}\n                                onChange={(e) => setNewDescription(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"section\">\n                            <Form.Label>Section</Form.Label>\n                            <Form.Control\n                                as=\"select\"\n                                value={newSection}\n                                onChange={(e) => setNewSection(e.target.value)}\n                            >\n                                {textAreas.map(a =>\n                                    <option>{a}</option>\n                                )}\n                            </Form.Control>\n                            <Form.Text muted>You must click on a section for it to save</Form.Text>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer className=\"border-0\">\n                    <Button variant=\"secondary\" onClick={closeCreateModal}>\n                        Cancel\n                    </Button>\n                    <Button variant=\"primary\" onClick={saveNewBlock}>\n                        Save\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default TextContentPage;","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/text/TextContent.jsx",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":50,"column":6,"nodeType":"82","endLine":50,"endColumn":8,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":2,"column":29,"nodeType":"86","messageId":"87","endLine":2,"endColumn":32},{"ruleId":"84","severity":1,"message":"88","line":2,"column":42,"nodeType":"86","messageId":"87","endLine":2,"endColumn":52},{"ruleId":"84","severity":1,"message":"89","line":1,"column":27,"nodeType":"86","messageId":"87","endLine":1,"endColumn":37},{"ruleId":"90","severity":1,"message":"91","line":45,"column":17,"nodeType":"92","endLine":45,"endColumn":41},{"ruleId":"80","severity":1,"message":"93","line":13,"column":5,"nodeType":"86","endLine":13,"endColumn":14,"suggestions":"94"},{"ruleId":"84","severity":1,"message":"88","line":2,"column":42,"nodeType":"86","messageId":"87","endLine":2,"endColumn":52},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["97"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Breadcrumb' is defined but never used.","'useContext' is defined but never used.","react/jsx-pascal-case","Imported JSX component item must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","React Hook useEffect contains a call to 'setProjectsList'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [userData.userInfo.proj] as a second argument to the useEffect Hook.",["98"],"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [history]",{"range":"103","text":"104"},"Add dependencies array: [userData.userInfo.proj]",{"range":"105","text":"106"},[1487,1489],"[history]",[557,557],", [userData.userInfo.proj]"]
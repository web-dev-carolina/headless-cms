[{"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/index.js":"1","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/serviceWorker.js":"2","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/App.js":"3","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/NavbarContainer.jsx":"4","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/context/UserContext.js":"5","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/Dashboard.jsx":"6","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/Signup.jsx":"7","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/Login.jsx":"8","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/testimonials/TestimonialsPage.jsx":"9","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/people/PeoplePage.jsx":"10","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/ProjectSelect.jsx":"11","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/testimonials/Testimonials.jsx":"12","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/people/People.jsx":"13","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/text/TextContentPage.jsx":"14","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/text/TextContent.jsx":"15"},{"size":404,"mtime":1608939208621,"results":"16","hashOfConfig":"17"},{"size":5086,"mtime":1608725249596,"results":"18","hashOfConfig":"17"},{"size":1578,"mtime":1609098487800,"results":"19","hashOfConfig":"17"},{"size":4064,"mtime":1609172508544,"results":"20","hashOfConfig":"17"},{"size":75,"mtime":1608826639850,"results":"21","hashOfConfig":"17"},{"size":1469,"mtime":1609175008300,"results":"22","hashOfConfig":"17"},{"size":2592,"mtime":1608941555241,"results":"23","hashOfConfig":"17"},{"size":2148,"mtime":1609172182962,"results":"24","hashOfConfig":"17"},{"size":3526,"mtime":1609109032754,"results":"25","hashOfConfig":"17"},{"size":4859,"mtime":1609109059986,"results":"26","hashOfConfig":"17"},{"size":1733,"mtime":1609174690172,"results":"27","hashOfConfig":"17"},{"size":5325,"mtime":1609175408364,"results":"28","hashOfConfig":"17"},{"size":6728,"mtime":1609109052744,"results":"29","hashOfConfig":"17"},{"size":4885,"mtime":1609175770224,"results":"30","hashOfConfig":"17"},{"size":5317,"mtime":1609176494356,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1csybor",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/index.js",[],["65","66"],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/serviceWorker.js",[],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/App.js",["67"],"import NavbarContainer from './components/NavbarContainer.jsx';\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport { useHistory } from \"react-router-dom\";\nimport UserContext from \"./context/UserContext.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Axios from 'axios';\nrequire('dotenv').config();\n\nfunction App() {\n  const [userData, setUserData] = useState({ token: undefined, userInfo: { user: undefined, proj: [undefined] } });\n  const history = useHistory();\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"auth-token\");\n      if (token == null) {\n        localStorage.setItem(\"auth-token\", \"\");\n        token = \"\";\n      }\n      const tokenRes = await Axios.post(process.env.REACT_APP_API_URL+\"/users/tokenIsValid\", null, {\n        headers: { \"auth-token\": token }\n      });\n      if (tokenRes.data.valid) {\n        const userRes = await Axios.get(process.env.REACT_APP_API_URL+\"/users/\" + tokenRes.data.user._id);\n        setUserData({\n          token: tokenRes.data.token,\n          userInfo: {\n            user: userRes.data.user,\n            proj: userRes.data.proj,\n            activeProject: \"\"\n          },\n        });\n        history.push('/projectselect');\n        console.log('already logged in');\n      } else {\n        history.push('/signin');\n      }\n    }\n    checkLoggedIn();\n  }, []);\n\n  return (\n    <UserContext.Provider value={{ userData, setUserData }} >\n      <NavbarContainer>\n      </NavbarContainer>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/NavbarContainer.jsx",["68"],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/context/UserContext.js",[],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/Dashboard.jsx",["69"],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/Signup.jsx",[],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/Login.jsx",[],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/testimonials/TestimonialsPage.jsx",[],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/people/PeoplePage.jsx",["70"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { Form, Container, Button, Modal, Row, Col } from \"react-bootstrap\";\nimport Axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport People from './People.jsx';\nconst PeoplePage = () => {\n    const history = useHistory();\n    const [people, setPeople] = useState([]);\n    const [showCreate, setShowCreate] = useState(false);\n    const [newFname, setNewFname] = useState(\"\");\n    const [newLname, setNewLname] = useState(\"\");\n    const [newPos, setNewPos] = useState(\"\");\n    const [newBio, setNewBio] = useState(\"\");\n\n    useEffect(() => {\n        async function fetchData() {\n            const result = await Axios.get(process.env.REACT_APP_API_URL + \"/people\");\n            const data = result.data;\n            setPeople(data);\n        }\n        fetchData();\n    }, []);\n\n    const showCreateModal = () => setShowCreate(true);\n    const closeCreateModal = () => setShowCreate(false);\n    const saveNewPerson = async () => {\n        const url = process.env.REACT_APP_API_URL + \"/people\";\n        await Axios.post(url, {\n            fname: newFname,\n            lname: newLname,\n            pos: newPos,\n            bio: newBio\n        })\n        setShowCreate(false);\n        history.replace('/dashboard');\n        history.replace('/people');\n    }\n\n    return (\n        <>\n            <Container className=\"home pt-3\">\n                <h3 className=\"text-center\">People collection:</h3>\n                <Button variant=\"secondary\" onClick={showCreateModal}>Add new organization member</Button>\n                <div className=\"row\" key=\"people\">\n                    {people.map(person => <People person={person} />)}\n                </div>\n            </Container>\n            <Modal show={showCreate} onHide={closeCreateModal}>\n                <Modal.Header className=\"border-0\">\n                    <Modal.Title>Create a new organization member</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form className=\"\">\n                        <Row>\n                            <Col>\n                                <Form.Group size=\"lg\" controlId=\"fname\">\n                                    <Form.Label>First Name</Form.Label>\n                                    <Form.Control\n                                        autoFocus\n                                        type=\"text\"\n                                        placeholder=\"John\"\n                                        value={newFname}\n                                        onChange={(e) => setNewFname(e.target.value)}\n                                    />\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Form.Group size=\"lg\" controlId=\"lname\">\n                                    <Form.Label>Last Name</Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        placeholder=\"Doe\"\n                                        value={newLname}\n                                        onChange={(e) => setNewLname(e.target.value)}\n                                    />\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Form.Group size=\"lg\" controlId=\"pos\">\n                            <Form.Label>Position</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"President\"\n                                value={newPos}\n                                onChange={(e) => setNewPos(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"bio\">\n                            <Form.Label>Bio</Form.Label>\n                            <Form.Control\n                                as=\"textarea\"\n                                rows={3}\n                                placeholder=\"Received his MBA from UNC Kenan-Flagler and is an avid bird-watcher.\"\n                                value={newBio}\n                                onChange={(e) => setNewBio(e.target.value)}\n                            />\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer className=\"border-0\">\n                    <Button variant=\"secondary\" onClick={closeCreateModal}>\n                        Cancel\n                    </Button>\n                    <Button variant=\"primary\" onClick={saveNewPerson}>\n                        Save\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default PeoplePage;","/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/ProjectSelect.jsx",["71"],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/testimonials/Testimonials.jsx",[],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/people/People.jsx",[],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/text/TextContentPage.jsx",[],"/Users/rushil/Documents/GitHub/headless-cms/cms-app/src/components/text/TextContent.jsx",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":41,"column":6,"nodeType":"78","endLine":41,"endColumn":8,"suggestions":"79"},{"ruleId":"80","severity":1,"message":"81","line":2,"column":31,"nodeType":"82","messageId":"83","endLine":2,"endColumn":42},{"ruleId":"80","severity":1,"message":"84","line":2,"column":29,"nodeType":"82","messageId":"83","endLine":2,"endColumn":32},{"ruleId":"80","severity":1,"message":"85","line":1,"column":27,"nodeType":"82","messageId":"83","endLine":1,"endColumn":37},{"ruleId":"76","severity":1,"message":"86","line":13,"column":5,"nodeType":"82","endLine":13,"endColumn":14,"suggestions":"87"},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["90"],"no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'useContext' is defined but never used.","React Hook useEffect contains a call to 'setProjectsList'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [userData.userInfo.proj] as a second argument to the useEffect Hook.",["91"],"no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},"Update the dependencies array to be: [history]",{"range":"96","text":"97"},"Add dependencies array: [userData.userInfo.proj]",{"range":"98","text":"99"},[1394,1396],"[history]",[557,557],", [userData.userInfo.proj]"]